@model Ecart.Models.tblregistration

@{
    ViewBag.Title = "Create";
    Layout = "";
}
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"
      @*<style>
    .maindiv {
        background-color: cadetblue;
    }

    .form-group {
        margin-left: 100px;
    }
</style>*@
<!-- Button trigger modal -->
@*<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModalCenter">
        Launch demo modal
    </button>*@

<!-- Modal -->

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="form-horizontal maindiv align-items-center">
            <marquee><h4 class="display-4">Enter shipping details</h4></marquee>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "well form-horizontal" })
            @*<div class="form-group">
                    @Html.LabelFor(model => model.userid, "userid", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("userid", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.userid, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                <label class="col-md-4 control-label">Name</label>
                <div class="col-md-4 inputGroupContainer">

                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                        @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", name = "first_name", placeholder = "Enter the name" } })
                        @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-4 control-label">Addressline 1</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-home"></i></span>
                        @Html.EditorFor(model => model.addressline1, new { htmlAttributes = new { @class = "form-control", name = "address", placeholder = "Enter the address" } })
                        @Html.ValidationMessageFor(model => model.addressline1, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label class="col-md-4 control-label">Adressline 2</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-home"></i></span>
                        @Html.EditorFor(model => model.addresslin2, new { htmlAttributes = new { @class = "form-control", name = "address", placeholder = "Enter the address" } })
                        @Html.ValidationMessageFor(model => model.addresslin2, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-4 control-label">City</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-home"></i></span>
                        @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control", name = "city", placeholder = "Enter the city" } })
                        @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-4 control-label">Country</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-home"></i></span>
                        @Html.EditorFor(model => model.country, new { htmlAttributes = new { @class = "form-control", name = "country", placeholder = "Enter the country" } })
                        @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label class="col-md-4 control-label">Phone #</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-earphone"></i></span>
                        @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control", name = "phone", placeholder = "Enter the Phone" } })
                        @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-4 control-label">Zip Code</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-home"></i></span>
                        @Html.EditorFor(model => model.pin, new { htmlAttributes = new { @class = "form-control", name = "zip", placeholder = "Enter the pin" } })
                        @Html.ValidationMessageFor(model => model.pin, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label class="col-md-4 control-label">E-Mail</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", name = "email", placeholder = "Enter the Email" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="proced to paymet" class="btn btn-danger" data-toggle="modal" data-target="#myModal" />

                </div>
            </div>
        </div>



    </div>
    @*<td width="20%"><a href="#" class="btn btn-danger" onclick="ConfirmDelete()"><i class="glyphicon glyphicon-trash"></i> </a> </td>*@
    <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Modal title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    ...
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="myModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h3 class="modal-title">Delete Employee</h3>
                </div>
                <div class="modal-body">
                    <h4>Are you sure you want to Remove this Employee?</h4>



                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>

                    <a href="#" class="btn btn-success" onclick="DeleteEmployee()">Confirm</a>
                </div>

            </div>

        </div>

    </div>
    <input type="hidden" id="hiddenEmployeeId" />
}


<script>


    $(document).ready(function () {
        $('#contact_form').bootstrapValidator({
            // To use feedback icons, ensure that you use Bootstrap v3.1.0 or later
            feedbackIcons: {
                valid: 'glyphicon glyphicon-ok',
                invalid: 'glyphicon glyphicon-remove',
                validating: 'glyphicon glyphicon-refresh'
            },
            fields: {
                first_name: {
                    validators: {
                        stringLength: {
                            min: 2,
                        },
                        notEmpty: {
                            message: 'Please supply your first name'
                        }
                    }
                },
                last_name: {
                    validators: {
                        stringLength: {
                            min: 2,
                        },
                        notEmpty: {
                            message: 'Please supply your last name'
                        }
                    }
                },
                email: {
                    validators: {
                        notEmpty: {
                            message: 'Please supply your email address'
                        },
                        emailAddress: {
                            message: 'Please supply a valid email address'
                        }
                    }
                },
                phone: {
                    validators: {
                        notEmpty: {
                            message: 'Please supply your phone number'
                        },
                        phone: {
                            country: 'US',
                            message: 'Please supply a vaild phone number with area code'
                        }
                    }
                },
                address: {
                    validators: {
                        stringLength: {
                            min: 8,
                        },
                        notEmpty: {
                            message: 'Please supply your street address'
                        }
                    }
                },
                city: {
                    validators: {
                        stringLength: {
                            min: 4,
                        },
                        notEmpty: {
                            message: 'Please supply your city'
                        }
                    }
                },
                state: {
                    validators: {
                        notEmpty: {
                            message: 'Please select your state'
                        }
                    }
                },
                zip: {
                    validators: {
                        notEmpty: {
                            message: 'Please supply your zip code'
                        },
                        zipCode: {
                            country: 'US',
                            message: 'Please supply a vaild zip code'
                        }
                    }
                },
                comment: {
                    validators: {
                        stringLength: {
                            min: 10,
                            max: 200,
                            message: 'Please enter at least 10 characters and no more than 200'
                        },
                        notEmpty: {
                            message: 'Please supply a description of your project'
                        }
                    }
                }
            }
        })
            .on('success.form.bv', function (e) {
                $('#success_message').slideDown({ opacity: "show" }, "slow") // Do something ...
                $('#contact_form').data('bootstrapValidator').resetForm();

                // Prevent form submission
                e.preventDefault();

                // Get the form instance
                var $form = $(e.target);

                // Get the BootstrapValidator instance
                var bv = $form.data('bootstrapValidator');

                // Use Ajax to submit form data
                $.post($form.attr('action'), $form.serialize(), function (result) {
                    console.log(result);
                }, 'json');
            });
    });






    var ConfirmDelete = function (EmployeeId) {

        $("#hiddenEmployeeId").val(EmployeeId);
        $("#myModal").modal('show');

    }

    var DeleteEmployee = function () {



        var empId = $("#hiddenEmployeeId").val();

        $.ajax({

            type: "POST",
            url: "/Home/deleteEmployeeDetails",
            data: { Id: empId },
            success: function (result) {

                $("#myModal").modal("hide");
                $("#row_" + empId).remove();

            }

        })

    }



</script>
